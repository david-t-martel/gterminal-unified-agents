[project]
name = "gemini-cli"
version = "1.0.0"
description = "Standalone Gemini CLI tool with rich terminal UI and business service account authentication"
authors = [{name = "Your Name", email = "your.email@example.com"}]
readme = "README.md"
license = {text = "MIT"}
keywords = ["gemini", "cli", "ai", "google", "vertex-ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

# Minimal dependencies for standalone operation
dependencies = [
    # Google Cloud & Gemini
    "google-cloud-aiplatform>=1.60.0",
    "vertexai>=1.60.0", 
    
    # CLI framework
    "click>=8.1.7",
    
    # Rich terminal UI
    "rich>=13.9.4",
    "prompt-toolkit>=3.0.43",
    
    # Data validation
    "pydantic>=2.10.0",
]

requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0", 
    "pytest-cov>=4.0.0",
    "black>=24.0.0",
    "ruff>=0.6.0",
    "mypy>=1.8.0",
]

[project.scripts]
gemini-cli = "gemini_cli.main:main"

[project.urls]
Homepage = "https://github.com/your-username/gemini-cli"
Repository = "https://github.com/your-username/gemini-cli"
Documentation = "https://github.com/your-username/gemini-cli#readme"
"Bug Tracker" = "https://github.com/your-username/gemini-cli/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["gemini_cli"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers", 
    "--strict-config",
    "--cov=gemini_cli",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
markers = ["asyncio"]

[tool.coverage.run]
source = ["gemini_cli"]
omit = [
    "tests/*",
    "gemini_cli/__main__.py",
]

[tool.black]
target-version = ["py311"]
line-length = 100

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # Use of assert in tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true  
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "vertexai.*",
    "google.cloud.*", 
    "google.oauth2.*",
    "google.auth.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]
