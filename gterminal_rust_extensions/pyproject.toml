[build-system]
requires = ["maturin>=1.4,<2.0"]
build-backend = "maturin"

[project]
name = "gterminal-rust-extensions"
version = "0.1.0"
description = "High-performance Rust extensions for GTerminal ReAct engine"
authors = [{ name = "GTerminal Team", email = "dev@gterminal.io" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities",
]
keywords = [
    "rust",
    "performance",
    "cache",
    "json",
    "file-operations",
    "command-execution",
    "async",
    "concurrent",
    "ai-agents",
    "react-engine",
]

dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "pytest-benchmark>=4.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]

benchmark = ["psutil>=5.9", "memory-profiler>=0.60", "pytest-benchmark>=4.0"]

examples = ["rich>=13.0", "click>=8.0", "typer>=0.9"]

all = ["gterminal-rust-extensions[dev,benchmark,examples]"]

[project.urls]
Homepage = "https://github.com/gterminal/rust-extensions"
Documentation = "https://gterminal.github.io/rust-extensions"
Repository = "https://github.com/gterminal/rust-extensions.git"
"Bug Tracker" = "https://github.com/gterminal/rust-extensions/issues"

[project.scripts]
gterminal-benchmark = "gterminal_rust_extensions.cli:benchmark"
gterminal-demo = "gterminal_rust_extensions.cli:demo"

[tool.maturin]
# PyO3 extension module
python-source = "python"
module-name = "gterminal_rust_extensions"
strip = true

# Build configuration
features = ["pyo3/extension-module"]

[tool.maturin.target.x86_64-unknown-linux-gnu]
rustflags = ["-C", "target-cpu=native"]

[tool.maturin.target.x86_64-pc-windows-msvc]
rustflags = ["-C", "target-cpu=native"]

[tool.maturin.target.x86_64-apple-darwin]
rustflags = ["-C", "target-cpu=native"]

[tool.maturin.target.aarch64-apple-darwin]
rustflags = ["-C", "target-cpu=native"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["--strict-markers", "--strict-config", "--verbose", "-ra"]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
  | target
)/
'''

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # Performance
    "PERF",
    # Comprehensions
    "C4",
]

ignore = [
    # Line too long (handled by black)
    "E501",
    # Do not assign a lambda expression, use a def
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]      # Allow unused imports in __init__.py
"example_usage.py" = ["E402"] # Allow imports not at top of file for demo

[tool.ruff.lint.isort]
known-first-party = ["gterminal_rust_extensions"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["gterminal_rust_extensions.*"]
ignore_missing_imports = true

[tool.coverage.run]
branch = true
source = ["python"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
