[package]
name = "fullstack_agent_rust"
version = "0.3.0"
edition = "2021"
authors = ["Agent Development Team <dev@fullstack-agent.com>"]
description = "High-performance Rust extensions for fullstack agent"
license = "MIT"
repository = "https://github.com/agents/my-fullstack-agent"
keywords = ["python", "pyo3", "performance", "ai", "agents"]
categories = ["api-bindings", "science"]

[lib]
name = "fullstack_agent_rust"
crate-type = ["cdylib"]  # Temporarily build as rlib only to avoid proc-macro conflicts
path = "lib.rs"

[dependencies]
# PyO3 core dependencies - fully enabled with conflict resolution
pyo3 = { version = "0.22", features = ["extension-module", "abi3-py310"] }
# Note: pyo3-asyncio 0.22 doesn't exist, will implement async support manually

# Async runtime
tokio = { version = "1.41", features = ["sync", "time", "fs", "io-util", "process", "macros", "rt-multi-thread"] }
futures = { version = "0.3", default-features = false, features = ["std"] }
futures-util = { version = "0.3", default-features = false, features = ["std"] }

# Serialization - high performance with all features enabled
serde = { version = "1.0", features = ["derive", "std"] }
serde_json = "1.0"
rmp-serde = "1.3"  # MessagePack - re-enabled
bincode = "1.3"    # Binary serialization

# High-performance data structures - standardized
ahash = "0.8"                    # Fast hash maps (primary choice)
dashmap = "6.1"                  # Concurrent hash map
indexmap = { version = "2.6", features = ["serde"] }
smallvec = { version = "1.13", features = ["serde"] }
once_cell = "1.20"               # Lazy static initialization

# Caching and storage
redis = { version = "0.26", features = ["aio", "tokio-comp", "connection-manager"], default-features = false }  # Re-enabled
lru = "0.12"
# TTL cache for time-based expiration
ttl_cache = "0.5"

# Authentication and security
sha2 = "0.10"
blake3 = { version = "1.5", features = ["rayon"] }
argon2 = "0.5"
rand_core = { version = "0.6", features = ["getrandom"] }
jsonwebtoken = "9.3"
ring = "0.17"

# File I/O and system operations
walkdir = "2.5"
ignore = "0.4"  # Fast file filtering
memmap2 = "0.9"  # Memory-mapped files

# Text processing and search
regex = "1.11"
aho-corasick = "1.1"  # Multi-pattern string matching
rayon = "1.10"         # Data parallelism
globset = "0.4"        # Glob pattern matching
which = "6.0"          # Executable finding

# WebSocket and networking
tokio-tungstenite = { version = "0.24", features = ["native-tls"] }
url = "2.5"

# HTTP client with advanced features
reqwest = { version = "0.12", features = ["json", "stream", "gzip", "brotli", "rustls-tls", "http2", "multipart"] }
hyper = { version = "1.0", features = ["full"] }
tower = { version = "0.4", features = ["timeout", "retry", "make"] }

# Additional fetch dependencies
bytes = "1.8"
humantime-serde = "1.1"

# Compression
flate2 = "1.0"
zstd = "0.13"

# Date and time
chrono = { version = "0.4", features = ["serde"] }

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Additional required dependencies
hex = "0.4"
base64 = "0.22"
base32 = "0.5"
uuid = { version = "1.11", features = ["v4"] }

# Metrics and observability
metrics = "0.23"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Configuration
config = { version = "0.14", default-features = false, features = ["toml"] }  # Re-enabled
toml = "0.8"

# System information
sysinfo = "0.31"

# Optional high-performance memory allocators
jemallocator = { version = "0.5", optional = true }
mimalloc = { version = "0.1", optional = true, default-features = false }

# [build-dependencies]
# pyo3-build-config = "0.19"  # Temporarily disabled

# Benchmark dependencies
[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tempfile = "3.10"

# Benchmark targets (disabled until bench files are created)
# [[bench]]
# name = "criterion"
# harness = false
# path = "benches/criterion.rs"

[features]
default = ["extension-module", "abi3"]
extension-module = ["pyo3/extension-module"]
abi3 = ["pyo3/abi3", "pyo3/abi3-py310"]

# Development features
dev = []
bench = []

# Performance features
simd = []              # Enable SIMD optimizations
native-tls = []        # Use system TLS
# runtime-tokio = ["pyo3-asyncio/tokio-runtime"]
# runtime-async-std = ["pyo3-asyncio/async-std-runtime"]

# Memory optimization features
jemalloc = ["jemallocator"]  # High-performance allocator
mimalloc-allocator = ["dep:mimalloc"]      # Microsoft's allocator

# CPU-specific optimization features
avx2 = []              # AVX2 SIMD instructions
bmi = []               # Bit manipulation instructions
fma = []               # Fused multiply-add

# Build optimization profiles
[profile.dev]
opt-level = 1           # Basic optimization for faster compilation
debug = true           # Keep debug symbols for development
overflow-checks = true # Helpful for catching bugs
panic = "unwind"       # Better debugging experience
incremental = true     # Enable incremental compilation for faster rebuilds
codegen-units = 256    # Max parallelism for dev builds
lto = false           # No LTO for dev builds (faster compilation)

[profile.release]
opt-level = 3         # Maximum optimization for speed
debug = false         # No debug symbols in release
overflow-checks = false
panic = "abort"       # Smaller binaries, faster execution
lto = "fat"          # Link-Time Optimization across all crates
codegen-units = 1    # Single codegen unit for maximum optimization
strip = true         # Strip symbols from binary
rpath = false       # Don't use rpath

[profile.bench]
inherits = "release"
debug = true         # Keep debug info for profiling
strip = false       # Keep symbols for benchmarking tools

[profile.dev-fast]
inherits = "dev"
opt-level = 2       # Good balance of compile time and runtime performance
debug = 1          # Minimal debug info
incremental = true

# Profile-guided optimization profiles
[profile.pgo-generate]
inherits = "release"
opt-level = 3
lto = "fat"
codegen-units = 1
strip = false       # Keep symbols for PGO data collection
debug = false
# Enable PGO data generation via environment variable or build script

[profile.pgo-use]
inherits = "release"
opt-level = 3
lto = "fat"
codegen-units = 1
strip = true        # Strip symbols in final optimized build
debug = false
# Use PGO data via environment variable or build script

# Legacy PGO profile for compatibility
[profile.pgo]
inherits = "pgo-use"
